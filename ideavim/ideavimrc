" ---------- BASICS --------------------------------------------------
let mapleader=" "           " Map leader to space
set timeout=200             " Timeout for key
inoremap jj <Esc>

" To be consistent with C and D operators, the default behavior is to yank the whole line.
nnoremap Y y$

" While in visual mode, will delete what is currently highlighted and replace it with what is in the register.
" But it will yank it to a void register, meaning I still have what I originally had when I pasted.
vnoremap <leader>p "_dP

" runs :wa (save all) instead of :w, this is to support IJ options like Prettier or ESLint on save.
set ideawrite=all

nmap <leader>w  :w<CR>
nmap <leader>q  <Action>(CloseContent)
nmap <leader>Q <Action>(CloseAllEditors)

set number relativenumber
set scrolloff=10
set sidescrolloff=10

set clipboard+=unnamed
" enable native idea paste action for put operations
set clipboard+=ideaput


""" ------ IdeaVim Settings -------------------------------------------------
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

set ideamarks                   " This is to sync vim marks with IJ Bookmarks.
set ideajoin                    " https://github.com/JetBrains/ideavim/blob/master/doc/ideajoin-examples.md
set ideastatusicon=enabled      " Shows the icon in the status bar coloured.
set ideavimsupport=dialogs      " Enable IdeaVim on dialogs.
set idearefactormode=keep       " Define the mode that would be enabled during the refactoring (renaming, etc)

" ideavimrc
nmap <leader>cvi :e ~/.config/ideavim/ideavimrc<CR>
map <leader>rvi <Action>(IdeaVim.ReloadVimRc.reload)


" ----- Search -----------------------------------------------------------
set incsearch
set hlsearch
set ignorecase
set smartcase

" To stop highlights when stop searching
nnoremap <esc> :noh<return><esc>


""" -------- Plugins --------------------------------------------------
Plug 'preservim/nerdtree'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-multiple-cursors'
Plug 'vim-scripts/argtextobj'
Plug 'kana/vim-textobj-entire'
Plug 'machakann/vim-highlightedyank'
Plug 'dbakker/vim-paragraph-motion'


""" ------ HIGHLIGHT Yanked text --------------------------------
let g:highlightedyank_highlight_duration = "250"
let g:highlightedyank_highlight_color = "rgba(160, 160, 160, 155)"


""" ---------- Multiple Cursors --------------------------------------------
map mn <A-n>
map mx <A-x>
map mp <A-p>


""" ---------- EasyMotion --------------------------------------------------
map <leader>f <Plug>(easymotion-s)
map <leader>F <Plug>(easymotion-f)


" ------ Distraction Free Mode -----------------------------------------
map <c-z> <Action>(ToggleDistractionFreeMode)


" ---- Terminal ---------------------------------------------------------
map <c-t>     <Action>(ActivateTerminalToolWindow)
map <leader>t <Action>(Terminal.OpenInTerminal)


""" ---- NERDTree ---------------------------------------------------------
map <c-e> <Action>(SelectInProjectView)
map <c-n> :NERDTree<CR>
g:NERDTreeMapOpenSplit


" ---- Window Management ------------------------------------------------
map <c-\> <Action>(SplitHorizontally)
map <c--> <Action>(SplitVertically)
map <c-=> <Action>(Unsplit)
" map <c-m> <Action>(MoveEditorToOppositeTabGroup)

map <leader>e <Action>(EditSourceInNewWindow)
map <leader>n <Action>(NextWindow)

map <c-p> <Action>(JumpToLastWindow)
map <c-x> <Action>(HideAllWindows)

map <leader>,todo <Action>(ActivateTODOToolWindow)

" To move between tabs (currently I'm not using tabs)
" map <TAB> <Action>(PreviousTab)
" map <s-TAB> <Action>(NextTab)

sethandler <c-j> a:vim
sethandler <c-k> a:vim
" Move between windows
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k


""" ------- GIT -----------------------------------------------------------
map <leader>gc  <Action>(ActivateCommitToolWindow)
map <leader>gp  <Action>(Vcs.Push)
map <leader>gi <Action>(Git.Ignore.File)
map <leader>grc <Action>(Git.ChangesView.Conflicts)
map <leader>gf  <Action>(Git.ChangesView.AcceptYours)
map <leader>gj  <Action>(Git.ChangesView.AcceptTheirs)
map <leader>gm  <Action>(Git.Menu)
map <leader>gb  <Action>(Git.Branches)
map <leader>ghp <Action>(Github.Create.Pull.Request)
map <leader>ggb <Action>(Github.Open.In.Browser)


""" -------- LSP -------------------------------------------------------
map gT         <Action>(GotoTest)
map gi         <Action>(GotoImplementation)
map gn         <Action>(GotoNextError)
map gp         <Action>(GotoPreviousError)
map <leader>re <Action>(RenameElement)
map <leader>su <Action>(FindUsages)
map <leader>rnf <Action>(RenameFile)


""" -------- Refactorings ------------------------------------------------
map <leader>rf <Action>(ShowReformatFileDialog)
map <leader>rq <Action>(Refactorings.QuickListPopupAction)
map <Leader>=  <Action>(ReformatCode)
map <leader>o  <Action>(OptimizeImports)
map <leader>cc <Action>(CodeCleanup)
map <leader>xm <Action>(ExtractMethod)


""" -------- Services ---------------------------------------------------
map <leader>sw <Action>(ActivateServicesToolWindow)


""" -------- Fuzzy finder ------------------------------------------------
map <c-f>       <Action>(GotoFile)
map <leader>rg  <Action>(FindInPath)
map <leader>rcl <Action>(RecentLocations)
map <leader>rcf <Action>(RecentFiles)
map <c-a>       <Action>(GotoAction)
map <leader>scf <Action>(Scratch.ShowFilesPopup)


""" -------- Folds -------------------------------------------------------
map zc         <Action>(CollapseRegion)
map zo         <Action>(ExpandRegion)
map <leader>zc <Action>(CollapseAllRegions)
map <leader>zo <Action>(ExpandAllRegions)


""" -------- Moving ------------------------------------------------------
map [[ <Action>(MethodUp)
map ]] <Action>(MethodDown)


""" -------- Run ---------------------------------------------------------
map <leader>rm <Action>(ChooseRunConfiguration)
map <leader>rr <Action>(Run)
map ,r         <Action>(ContextRun)

" Run the current file
map ,c         <Action>(RunClass)

" you can reach the ActivateDebugConfiguration by holding SHIFT when using ActivateRunConfiguration defined below.
map ,t         <Action>(ActivateRunToolWindow)
map ,u         <Action>(Rerun)
map ,f         <Action>(RerunFailedTests)
map ,b         <Action>(ToggleLineBreakpoint)
map ,d         <Action>(ContextDebug)
map ,n         <Action>(ActivateDebugToolWindow)


""" -------- Task management (Jira, GitHub, time tracking, etc) ---------
" "Manage task"

" Check tasks.switch
map <leader>mto <Action>(tasks.goto)
map <leader>mtc <Action>(tasks.close)
map <leader>mtt <Action>(tasks.time.tracking)
map <leader>mtb <Action>(tasks.open.in.browser)
