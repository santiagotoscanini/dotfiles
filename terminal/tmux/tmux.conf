# ======================================
# TMUX CONFIGURATION
# ======================================

# ======================================
# GENERAL SETTINGS
# ======================================

# Preserve terminal colors
set -g terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "xterm-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'  # Italics support

# Don't allow programs to change the window name
set-option -g allow-rename off

# Enable mouse support (scrolling, selecting panes/windows)
set -g mouse on

# Change prefix key from Ctrl-b to Ctrl-a (easier to type)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix  # Press C-a twice to send it to the application

# Set Vim mode for navigation and keybindings
setw -g mode-keys vi      # Use vi keys in copy mode
set -g status-keys vi     # Use vi keys in command prompt

# Display settings
set -g base-index 1           # Start windows numbering at 1 (instead of 0)
setw -g pane-base-index 1     # Make pane numbering consistent with windows
set -g renumber-windows on    # Renumber windows when a window is closed

set -g set-titles on          # Set terminal title
setw -g automatic-rename on   # Rename window to reflect current program

# Status bar update frequency
set -g status-interval 10     # Redraw status line every 10 seconds

# Message display time
set -g display-panes-time 800 # Slightly longer pane indicators display time
set -g display-time 1000      # Slightly longer status messages display time

# Activity monitoring
set -g monitor-activity on    # Highlight windows with activity
set -g visual-activity off    # Don't show messages for activity

# ======================================
# KEY BINDINGS
# ======================================

# Reload configuration
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display 'Configuration reloaded'

# Edit configuration and reload
bind e new-window -n "tmux.conf" "nvim $XDG_CONFIG_HOME/tmux/tmux.conf && tmux source $XDG_CONFIG_HOME/tmux/tmux.conf && tmux display \"Configuration reloaded\""

# Clear screen and history (Ctrl+l)
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# ======================================
# COPY MODE
# ======================================

# Enter copy mode with prefix+[
bind-key -T copy-mode-vi v send-keys -X begin-selection    # Start selection with v
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel  # Yank with y

# ======================================
# WINDOWS MANAGEMENT
# ======================================

# Window navigation with prefix + Ctrl-h/l (prev/next)
unbind n
unbind p
bind -r C-h previous-window    # Select previous window
bind -r C-l next-window        # Select next window
bind Tab last-window           # Toggle between current and last window

# New window with current path
bind c new-window -c "#{pane_current_path}"

# ======================================
# PANES MANAGEMENT
# ======================================

# Create new panes in current directory
bind - split-window -v -c "#{pane_current_path}"  # Split horizontally
bind _ split-window -h -c "#{pane_current_path}"  # Split vertically
# Unbind default split keys
unbind '"'
unbind %

# Pane resizing with prefix + H/J/K/L
bind -r H resize-pane -L 3  # Resize pane left
bind -r J resize-pane -D 3  # Resize pane down
bind -r K resize-pane -U 3  # Resize pane up
bind -r L resize-pane -R 3  # Resize pane right

# Swap panes
bind > swap-pane -D       # Swap current pane with next
bind < swap-pane -U       # Swap current pane with previous

# ======================================
# VIM INTEGRATION
# ======================================

# Smart pane switching with awareness of Vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Navigate with Ctrl + h/j/k/l in both Vim and tmux
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Handle different tmux versions for the backslash key
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Use vim navigation keys in copy mode
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ======================================
# SESSION MANAGEMENT
# ======================================

bind C-c new-session                                          # Create new session
bind C-f command-prompt -p find-session 'switch-client -t %%' # Find session by name

# ======================================
# STATUS BAR
# ======================================

# Hide status bar if only one window is open
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# ======================================
# PLUGINS
# ======================================

# Plugin manager setup
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'                # Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tmux-sensible'      # Sensible defaults

# Theme plugin
set -g @plugin 'wfxr/tmux-power'
# Available themes: gold, redwine, moon, forest, violet, snow, coral, sky
set -g @tmux_power_theme 'sky'

# Easy motion plugin (like vim-easymotion)
set -g @plugin 'IngoMeyer441/tmux-easy-motion'
set -g @easy-motion-prefix 'Space'

# ======================================
# NEW FEATURES
# ======================================

# Session saving and restoring
set -g @plugin 'tmux-plugins/tmux-resurrect'     # Save/restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-continuum'     # Auto-save sessions
set -g @continuum-restore 'on'                   # Auto-restore when tmux starts

# Copy to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'          # Copy to system clipboard
set -g @yank_selection 'clipboard'               # Use system clipboard

# Quickly open files/URLs from copy mode
set -g @plugin 'tmux-plugins/tmux-open'          # Open highlighted text

# Easy window/session switching with fzf
set -g @plugin 'sainnhe/tmux-fzf'
bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Join pane from another window (useful for combining panes)
bind-key J command-prompt -p "Join pane from window:" "join-pane -h -s '%%'"

# Quick pane cycling with double press of prefix
bind-key C-a select-pane -t :.+

# Toggle pane synchronization (send keys to all panes)
bind-key S set-window-option synchronize-panes\; display-message "synchronize-panes #{?pane_synchronized,on,off}"

# ======================================
# AUTOMATIC PLUGIN INSTALLATION
# ======================================

# Automatically install TPM and plugins if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
